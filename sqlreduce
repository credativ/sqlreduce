#!/usr/bin/python3

import argparse
import sys
import time

import sqlreduce

from loguru import logger
import sys
logger.add(sys.stderr, colorize=True, backtrace=True, diagnose=True)

@logger.catch
def main():
    argparser = argparse.ArgumentParser(description="Reduce a SQL query to the minimal query throwing the same error")
    argparser.add_argument("-d", "--database", type=str, default="")
    argparser.add_argument("-f", "--file", type=argparse.FileType('r'), default=sys.stdin)
    argparser.add_argument("query", nargs='*')
    args = argparser.parse_args()

    if (args.file != sys.stdin and args.query):
        raise Exception("Cannot use both -f and query arguments")

    if args.query:
        query = ' '.join(args.query)
    else:
        query = args.file.read().rstrip()

    # reduce query
    start = time.time()
    min_query, state = sqlreduce.run_reduce(args.database, query, True)
    duration = time.time() - start
    qps = len(state['seen']) / duration

    print()
    print("Minimal query yielding the same error:")
    print(min_query)
    print()
    print("Found on level:", state['min_query_level'])
    print("Seen:", len(state['seen']), "items,", sum([len(v) for v in state['seen']]), "Bytes")
    print("Iterations:", state['called'])
    print(f"Runtime: {duration:.3f} s, {qps:.1f} q/s")
    #print(state)

if __name__ == "__main__":
    main()
